<?php

namespace IsotopeDocRobot\Book;


use IsotopeDocRobot\Context\Context;
use Guzzle\Http\Client;
use Guzzle\Http\Message\PostFile;
use Guzzle\Log\ArrayLogAdapter;
use Guzzle\Plugin\Log\LogPlugin;
use Guzzle\Log\MessageFormatter;

class BookCreator
{
    private $context = null;

    public function __construct(Context $context)
    {
        $this->context = $context;
    }

    public function create()
    {
        $dir = sprintf(TL_ROOT . '/system/cache/isotope/docrobot/%s/%s/%s/%s',
            $this->context->getType(),
            $this->context->getVersion(),
            $this->context->getLanguage(),
            $this->context->getBook()
        );

        $client = new Client();

        $adapter = new ArrayLogAdapter();
        $logPlugin = new LogPlugin($adapter, MessageFormatter::DEBUG_FORMAT);

        // Attach the plugin to the client, which will in turn be attached to all
        // requests generated by the client
        $client->addSubscriber($logPlugin);

        $request = $client->createRequest('POST', 'http://c.docverter.com/convert');
        $request->setPostField('from', 'html');
        $request->setPostField('to', 'latex');

        foreach ((array) scan($dir) as $file) {
            $request->addPostFile('input_files', $dir . '/' . $file, 'text/html');
        }

        $response = $client->send($request);
var_dump($response);




        $tarName = 'textest.tar';
        $mainFile = 'test.tex';

        $phar = new \PharData($tarName);
        $phar->addFile($mainFile);
        $phar->addFile('test2.tex');
        $phar->compress(Phar::BZ2);

        /*
         * send file to http://latex.aslushnikov.com/data?target=' . $mainFile . '&force=true
        */


        // Clean up
        unlink($tarName);
        unlink($tarName . '.bz2');
    }
} 